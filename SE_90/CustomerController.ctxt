#BlueJ class context
comment0.target=CustomerController
comment0.text=\r\n\ The\ CustomerController\ class\ is\ for\ the\ most\ bringing\ together\ and\ furthers\r\n\ the\ functions\ of\ Customer\ Class.\ It\ interacts\ with\ the\ PrimeEvents\ Class\r\n\ for\ the\ PrimeEvents\ System.\r\n\r\n\ @author\ Team\ 90\r\n\ @since\ 10\ September\ 2019\r\n\ @version\ 21\ October\ 2019\r\n
comment1.params=
comment1.target=CustomerController()
comment1.text=\r\n\ Constructor\ class\ for\ CustomerController\r\n
comment10.params=fileName
comment10.target=void\ readCustomer(java.lang.String)
comment10.text=\r\n\ Method\ to\ read\ customer\ details\ to\ file\r\n\ \r\n\ @param\ fileName\ needs\ to\ be\ specified\ to\ read\ the\ details\ into\r\n\ @exception\ file\ not\ found\r\n\ @exception\ unexpected\ error\ when\ reading\ from\ customer\ txt\ file\r\n
comment2.params=
comment2.target=Customer[]\ getAllCus()
comment2.text=\r\n\ Returns\ all\ Customer\ information\r\n
comment3.params=index
comment3.target=Customer\ getCustomer(int)
comment3.text=\r\n\ Method\ responsible\ for\ getting\ specific\ information,\ reaching\ into\ customer\ class\r\n\ \r\n\ @param\ Requires\ index\ of\ customer\ to\ be\ specified\ by\ user\r\n\ @return\ the\ user\ with\ the\ customer\ stored\ in\ index\ identified\r\n
comment4.params=index\ firstName\ lastName\ email\ address\ password\ phone\ question1\ answer1\ question2\ answer2\ isConcession
comment4.target=void\ setCustomer(int,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ boolean)
comment4.text=\r\n\ Mutator\ method\ to\ store\ information\ within\ a\ specified\ index.\ Registers\ owner\ information\r\n\ \r\n\ @param\ firstName\ customer\ first\ name\r\n\ @param\ lastName\ customer\ last\ name\r\n\ @param\ email\ customer\ email\r\n\ @param\ address\ customer\ address\r\n\ @param\ password\ customer\ passowrd\r\n\ @param\ phone\ customer\ phone\ number\r\n\ @param\ question1\ customer\ secret\ question\ 1\r\n\ @param\ answer1\ customer\ secret\ answer\ 1\r\n\ @param\ question2\ customer\ secret\ question\ 2\r\n\ @param\ answer2\ customer\ secret\ answer\ 2\r\n\ @param\ isConcession\ verification\ for\ whether\ customer\ is\ concession\ or\ veteran\ -\ discount\ purposes\r\n
comment5.params=email
comment5.target=int\ checkEmail(java.lang.String)
comment5.text=\r\n\ Method\ to\ check\ email\r\n\ \r\n\ @param\ customer\ email\r\n\ @return\ if\ found,\ equals\ true\ (1)\r\n\ @return\ if\ not\ found,\ equals\ false\ (0)\r\n
comment6.params=email
comment6.target=int\ checkCusIndex(java.lang.String)
comment6.text=\r\n\ Method\ to\ find\ customer\ based\ on\ email\ \r\n\ \r\n\ @param\ email\ address\ of\ customer\ is\ required\r\n\ @return\ if\ found,\ return\ index\ number\r\n\ @return\ if\ not\ found,\ returns\ false\ (0)\r\n
comment7.params=
comment7.target=int\ custIndex()
comment7.text=\r\n\ Method\ to\ return\ the\ number\ of\ customer\ indexes\ there\ are\r\n\ @return\ Returns\ the\ number\ of\ indexes.\ \r\n
comment8.params=email
comment8.target=int\ checkCust(java.lang.String)
comment8.text=\r\n\ Method\ to\ check\ customer\ email\ validity\r\n\ \r\n\ @param\ customer\ email\ is\ required\ to\ be\ specified\r\n\ @return\ if\ found,\ returns\ index\ number\ which\ stores\ the\ email\r\n\ @return\ if\ not\ found,\ then\ return\ -1\r\n
comment9.params=fileName
comment9.target=void\ writeCustomer(java.lang.String)
comment9.text=\r\n\ Method\ to\ write\ customer\ details\ to\ file\r\n\ \r\n\ @param\ fileName\ needs\ to\ be\ specified\ to\ write\ the\ details\ into\r\n\ @exception\ file\ not\ found\r\n\ @exception\ unexpected\ error\ when\ writing\ to\ customer\ txt\ file\r\n
numComments=11
